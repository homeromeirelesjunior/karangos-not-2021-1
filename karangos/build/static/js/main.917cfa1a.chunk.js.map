{"version":3,"sources":["ui/FooterBar.js","img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClientesList2.js","routed/ClientesForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","text","width","color","palette","secondary","toolbar","backgroundColor","background","paper","minHeight","position","bottom","link","light","textDecoration","FooterBar","classes","Toolbar","className","Typography","variant","align","fontSize","href","menuButton","marginRight","spacing","menuLink","primary","MainMenu","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","edge","aria-label","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","TopBar","AppBar","src","logoImg","alt","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","setTimeout","columns","field","headerName","headerAlign","flex","disableColumnMenu","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","mask","type","onFocus","InputProps","startAdornment","InputAdornment","FormControl","FormControlLabel","control","disable","ClientesList","clientes","setClientes","ClientesForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","cliente","setCliente","clienteTemp","toLowerCase","createMuiTheme","main","yellow","pink","box","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.917cfa1a.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        width: '100%',\n        color: theme.palette.text.secondary\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '42px',\n        width: '100%',\n        position: 'fixed',\n        bottom: 0\n    },\n    link: {\n        color: theme.palette.secondary.light,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline'\n        }\n    }\n}));\n\nexport default function FooterBar() {\n    const classes = useStyles();\n\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography variant=\"caption\" align=\"center\" className={classes.text}>\n                Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\" /> por <a href=\"mailto:homeromeirelesjunior@gmail.com\" className={classes.link}>Homero Meireles Junior</a>\n            </Typography>\n        </Toolbar>\n    )\n}","export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuLink: {\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n}));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton \n                aria-controls=\"simple-menu\" \n                aria-haspopup=\"true\" \n                onClick={handleClick} \n                edge=\"start\" \n                className={classes.menuButton} \n                color=\"inherit\" \n                aria-label=\"menu\"\n            >\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose} >\n                    <Link className={classes.menuLink} to=\"/list\">Listagem de Karangos</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose} >\n                    <Link className={classes.menuLink} to=\"/new\">Cadastrar novo Karango</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/clientesList\">Listagem de Clientes</Link>\n                </MenuItem>\n                <MenuItem>\n                    <Link className={classes.menuLink} to=\"/clientesNew\">Cadastrar novo Cliente</Link>\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport logoImg from '../img/karangos.png';\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  logo: {\n      width: '300px',\n  },\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MainMenu />\n          <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\" />  \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({title = 'Confirmar', isOpen = false, onClose, children}) {\n\n    const handleClose = (result) => {\n        // Só chama a função onClose se a prop correspondente tiver sido passada\n        if (onClose) onClose(result);\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={isOpen}\n                onClose={() => handleClose(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {children}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleClose(true)} color=\"primary\">\n                        OK\n                    </Button>\n                    <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n                        Cancelar\n                     </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function KarangosList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [karangos, setKarangos] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    setTimeout(() => getData(), 100) \n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n         // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n      if(response.data.length > 0) setKarangos(response.data)\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch(error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if(result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    { \n      field: 'id',\n      headerName: 'Cód.',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      disableColumnMenu: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'marca', \n      headerName: 'Marca',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true, \n      disableColumnMenu: true\n    },\n    { \n      field: 'modelo', \n      headerName: 'Modelo',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true\n    },\n    { \n      field: 'cor', \n      headerName: 'Cor',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true, \n    },\n    { \n      field: 'ano_fabricacao', \n      headerName: 'Ano',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1 \n    },\n    { \n      field: 'importado', \n      headerName: 'Importado?',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true,\n      renderCell: params => (\n        <Checkbox checked={params.value === \"1\"} readOnly />\n      )\n    },\n    { \n      field: 'placa', \n      headerName: 'Placa',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true\n    },\n    { \n      field: 'preco', \n      headerName: 'Preço',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      valueFormatter: params => (\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n      ),\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    { \n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Deseja realmente excluir este karango?\n      </ConfirmDialog>\n      \n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n      \n      <h1>Listagem de Karangos</h1>\n      <Toolbar className={classes.toolbar}>\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n          Novo Karango\n        </Button>\n      </Toolbar>\n      <Paper elevation={4}>\n        <DataGrid \n          className={classes.dataGrid} \n          rows={karangos} \n          columns={columns} \n          pageSize={10} \n          autoHeight={true} \n          disableSelectionOnClick={true} \n        />\n      </Paper>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { FormControl, FormControlLabel } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* \n    Classes de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições númericas (1º, a 3º e a 4º depois do traço) ~> [0-9]\n    3) 2º posição após o traço: pode receber dígitos de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\nexport default function KarangosForm() {\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(), // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n    \n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso'\n    })\n\n    const[btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n    const [title, setTitle] = useState('Cadastrar novo Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n        // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if(params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch(error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    const [dialogOpen, setDialogOpen] = useState(false)\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = {...karango}\n        let importadoCheckedTemp = importadoChecked\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            // setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')            \n            // setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        } else if (property === 'placa') {\n            // setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        } else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder à avaliação da expressão entre os colchetes\n            // setCurrentId(event.target.id)\n            // setKarango({ ...karango, [property]: event.target.value })\n            karangoTemp[property] = event.target.value\n        }\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)     // O formulário foi modificado\n        validate(karangoTemp)   // Dispara a validação\n    }\n\n    function validate(data) {\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // Validação do campo maraca\n        if(data.marca.trim() === '') {\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if(data.modelo.trim() === '') {\n            errorTemp.modelo = 'O modelo deve ser preeenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if(data.cor.trim() === '') {\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // Valor válido não pode ser string vazia nem conter o caractere _ (underline)\n        if(data.placa.trim() === '' || data.placa.includes('_')) {\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preço\n        // Valor válido deve ser numérico e maior do que zero\n        if(isNaN(data.preco) || Number(data.preco) <= 0 ) {\n            errorTemp.preco = 'O preço deve ser preenchido e diferente de zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n\n        return isValid\n    }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({disabled: true, label: 'Enviando...'})\n\n            // Se o registro já existe (edição)\n            if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso'\n            })\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Erro: ' + error.message\n            })\n        }\n        // Reabilitar o botão Enviar\n        setBtnSendState({\n            disabled: false,\n            label: 'Enviar'\n        })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()\n        \n        // Só salva os dados se eles forem válidos\n        if(validate(karango)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a snackbar seja fechada clicando-se fora dela\n        if(reason === 'clickaway') return\n        setSnackState({...snackState, open: false}) // Fecha a snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n    \n        // Se o usuário concordou em voltar \n        if(result) history.push('/list')\n      }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if(isModified) setDialogOpen(true)\n        // Senão, voltamos diretamente à página de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n            <h1>{title}</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n\n                <TextField\n                    id=\"marca\" \n                    label=\"Marca\" \n                    variant=\"filled\" \n                    value={karango.marca} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField \n                    id=\"modelo\" \n                    label=\"Modelo\" \n                    variant=\"filled\" \n                    value={karango.modelo} \n                    onChange={handleInputChange} \n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField \n                    id=\"cor\" \n                    label=\"Cor\" \n                    variant=\"filled\" \n                    value={karango.cor} \n                    onChange={event => handleInputChange(event, 'cor')} \n                    fullWidth \n                    select\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor}\n                >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField \n                    id=\"ano_fabricacao\" \n                    label=\"Ano de Fabricação\" \n                    variant=\"filled\" \n                    value={karango.ano_fabricacao} \n                    onChange={event => handleInputChange(event, 'ano_fabricacao')} \n                    fullWidth \n                    select\n                >\n                    {\n                        years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)\n                    }\n                </TextField>\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    value={karango.placa}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                >\n                    {() => <TextField \n                                label=\"Placa\" \n                                variant=\"filled\" \n                                fullWidth \n                                required\n                                error={error.placa !== ''}\n                                helperText={error.placa}\n                            />}\n                </InputMask>\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    type=\"number\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth\n                    onFocus={event => event.target.select()}\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>, }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n\n                <FormControl fullWidth className={classes.checkbox}>\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked} onChange={handleInputChange}\n                            id=\"importado\" />}\n                        label=\"Importado?\"\n                    />\n                </FormControl>\n\n                <Toolbar className={classes.toolbar}>\n                    <Button \n                        variant=\"contained\"\n                        onClick={handleGoBack}\n                    >\n                        Voltar\n                    </Button>\n                    <Button\n                        variant=\"contained\" \n                        color=\"secondary\" \n                        type=\"submit\"\n                        disabled={btnSendState.disable}\n                    >\n                        {btnSendState.label}\n                    </Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function ClientesList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [clientes, setClientes] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    getData()\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n         // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/clientes?by=nome')\n      if(response.data.length > 0) setClientes(response.data)\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch(error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if(result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    { \n      field: 'id',\n      headerName: 'Cód.',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      disableColumnMenu: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'nome', \n      headerName: 'Nome',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true, \n      disableColumnMenu: true\n    },\n    { \n      field: 'cpf', \n      headerName: 'CPF',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true\n    },\n    { \n      field: 'rg', \n      headerName: 'RG',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true, \n    },\n    { \n      field: 'logradouro', \n      headerName: 'Logradouro',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1 \n    },\n    { \n      field: 'num_imovel', \n      headerName: 'Número',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      disableColumnMenu: true\n    },\n    { \n      field: 'complemento', \n      headerName: 'Complemento',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true\n    },\n    { \n      field: 'bairro', \n      headerName: 'Bairro',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'municipio', \n      headerName: 'Município',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'uf', \n      headerName: 'UF',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'telefone', \n      headerName: 'Telefone',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'email', \n      headerName: 'Email',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/clientesEdit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    { \n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center', \n      headerAlign: 'center', \n      disableColumnMenu: true,\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Deseja realmente excluir este cliente?\n      </ConfirmDialog>\n      \n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n      \n      <h1>Listagem de Clientes</h1>\n      <Toolbar className={classes.toolbar}>\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n          startIcon={<AddBoxIcon />} onClick={() => history.push('/clientesNew')}>\n          Novo Cliente\n        </Button>\n      </Toolbar>\n      <Paper elevation={4}>\n        <DataGrid \n          className={classes.dataGrid} \n          rows={clientes} \n          columns={columns} \n          pageSize={10} \n          autoHeight={true} \n          disableSelectionOnClick={true} \n        />\n      </Paper>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputMask from 'react-input-mask'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {    \n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\nconst cpfMask = '000.000.000-00'\nconst rgMask = '00.000.000-0'\nconst telefoneMask = '(00)00000-0000'\n\nexport default function ClientesForm() {\n    const classes = useStyles()\n\n    const [cliente, setCliente] = useState({\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        complemento: '',\n        bairro: '',\n        municipio: '',\n        uf: '',\n        telefone: '',\n        email: ''\n    })\n    \n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Cliente salvo com sucesso'\n    })\n\n    const[btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        bairro: '',\n        municipio: '',\n        telefone: '',\n        email: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n    const [title, setTitle] = useState('Cadastrar novo Cliente')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n        // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if(params.id) {\n            setTitle('Editando Cliente')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\n            setCliente(response.data)\n        }\n        catch(error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    const [dialogOpen, setDialogOpen] = useState(false)\n\n    function handleInputChange(event, property) {\n\n        const clienteTemp = {...cliente}\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n        \n        if (property === 'email') {\n            // setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            clienteTemp[property] = event.target.value.toLowerCase()\n        } else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder à avaliação da expressão entre os colchetes\n            clienteTemp[property] = event.target.value\n        }\n        setCliente(clienteTemp)\n        setIsModified(true)     // O formulário foi modificado\n        validate(clienteTemp)   // Dispara a validação\n    }\n\n    function validate(data) {\n        const errorTemp = {\n            nome: '',\n            cpf: '',\n            rg: '',\n            logradouro: '',\n            num_imovel: '',\n            bairro: '',\n            municipio: '',\n            uf: '',\n            telefone: '',\n            email: ''\n        }\n        let isValid = true\n\n        // Validação do campo Nome\n        if(data.nome.trim() === '') {\n            errorTemp.nome = 'O nome deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo CPF\n        if(data.cpf.trim() === '' || data.cpf.includes('_')) {\n            errorTemp.cpf = 'CPF deve ser corretamente preenchido'\n            isValid = false\n        }\n\n        // Validação do campo RG\n        if(data.rg.trim() === '' || data.rg.includes('_')) {\n            errorTemp.rg = 'RG deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo Logradouro\n        if(data.logradouro.trim() === '') {\n            errorTemp.logradouro = 'Logradouro deve ser preenchido'\n            isValid = false\n        }\n\n         // Validação do campo Número\n        if(data.num_imovel.trim() === '') {\n            errorTemp.num_imovel = 'Número deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo Bairro\n        if(data.bairro.trim() === '') {\n            errorTemp.bairro = 'RG deve ser preenchido'\n            isValid = false\n        }\n        \n        // Validação do campo Município\n        if(data.municipio.trim() === '') {\n            errorTemp.municipio = 'Município deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo Telefone\n        if(data.telefone.trim() === '' || data.telefone.includes('_')) {\n            errorTemp.telefone = 'Telefone deve ser corretamente preenchido'\n            isValid = false\n        }\n\n        // Validação do campo Email\n        if(data.email.trim() === '') {\n            errorTemp.email = 'Email deve ser preenchido'\n            isValid = false\n        }\n\n        setError(errorTemp)\n\n        return isValid\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({disabled: true, label: 'Enviando...'})\n\n            // Se o registro já existe (edição)\n            if(params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else await axios.post('https://api.faustocintra.com.br/clientes', cliente)\n\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Cliente salvo com sucesso'\n            })\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Erro: ' + error.message\n            })\n        }\n        // Reabilitar o botão Enviar\n        setBtnSendState({\n            disabled: false,\n            label: 'Enviar'\n        })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()\n        \n        // Só salva os dados se eles forem válidos\n        if(validate(cliente)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a snackbar seja fechada clicando-se fora dela\n        if(reason === 'clickaway') return\n        setSnackState({...snackState, open: false}) // Fecha a snackbar\n\n        // Retorna à página de listagem\n        history.push('/clientesList')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n    \n        // Se o usuário concordou em voltar \n        if(result) history.push('/clientesList')\n    }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if(isModified) setDialogOpen(true)\n        // Senão, voltamos diretamente à página de listagem\n        else history.push('/clientesList')\n    }\n\n    return (\n        <>\n\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n            <h1>{title}</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n\n                {/* Nome */}\n                <TextField\n                    id=\"nome\" \n                    label=\"Nome\" \n                    variant=\"filled\" \n                    value={cliente.nome} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.nome !== ''}\n                    helperText={error.nome}\n                />\n\n                {/* CPF */}\n                <InputMask\n                    formatChars={formatChars}\n                    mask={cpfMask}\n                    value={cliente.cpf}\n                    id=\"cpf\"\n                    onChange={event => handleInputChange(event, 'cpf')}\n                >\n                    {() => <TextField \n                                label=\"CPF\" \n                                variant=\"filled\" \n                                fullWidth \n                                required\n                                error={error.cpf !== ''}\n                                helperText={error.cpf}\n                            />}\n                </InputMask>\n\n                {/* RG */}\n                <InputMask\n                    formatChars={formatChars}\n                    mask={rgMask}\n                    value={cliente.rg}\n                    id=\"rg\"\n                    onChange={event => handleInputChange(event, 'rg')}\n                >\n                    {() => <TextField \n                                label=\"RG\" \n                                variant=\"filled\" \n                                fullWidth \n                                required\n                                error={error.rg !== ''}\n                                helperText={error.rg}\n                            />}\n                </InputMask>\n\n                {/* Logradouro */}\n                <TextField\n                    id=\"logradouro\" \n                    label=\"Logradouro\" \n                    variant=\"filled\" \n                    value={cliente.logradouro} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.logradouro !== ''}\n                    helperText={error.logradouro}\n                />\n\n                {/* Número */}\n                <TextField\n                    id=\"num_imovel\" \n                    label=\"Número\" \n                    variant=\"filled\" \n                    value={cliente.num_imovel} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.num_imovel !== ''}\n                    helperText={error.num_imovel}\n                />\n\n                {/* Complemento */}\n                <TextField\n                    id=\"complemento\" \n                    label=\"Complemento\" \n                    variant=\"filled\" \n                    value={cliente.complemento} \n                    onChange={handleInputChange} \n                    fullWidth \n                />\n\n                {/* Bairro */}\n                <TextField\n                    id=\"bairro\" \n                    label=\"Bairro\" \n                    variant=\"filled\" \n                    value={cliente.bairro} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.bairro !== ''}\n                    helperText={error.bairro}\n                />\n\n                {/* Município */}\n                <TextField\n                    id=\"municipio\" \n                    label=\"Município\" \n                    variant=\"filled\" \n                    value={cliente.municipio} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.municipio !== ''}\n                    helperText={error.municipio}\n                />\n\n                {/* UF */}\n                <TextField \n                    id=\"uf\" \n                    label=\"UF\" \n                    variant=\"filled\" \n                    value={cliente.uf} \n                    onChange={event => handleInputChange(event, 'uf')} \n                    fullWidth \n                    select\n                    required\n                    error={error.uf !== ''}\n                    helperText={error.uf}\n                > \n                    <MenuItem value=\"AC\">Acre</MenuItem>\n                    <MenuItem value=\"AL\">Alagoas</MenuItem>\n                    <MenuItem value=\"AP\">Amapá</MenuItem>\n                    <MenuItem value=\"AM\">Amazonas</MenuItem>\n                    <MenuItem value=\"BA\">Bahia</MenuItem>\n                    <MenuItem value=\"CE\">Ceará</MenuItem>\n                    <MenuItem value=\"DF\">Distrito Federal</MenuItem>\n                    <MenuItem value=\"ES\">Espírito Santo</MenuItem>\n                    <MenuItem value=\"GO\">Goías</MenuItem>\n                    <MenuItem value=\"MA\">Maranhão</MenuItem>\n                    <MenuItem value=\"MT\">Mato Grosso</MenuItem>\n                    <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\n                    <MenuItem value=\"MG\">Minas Gerais</MenuItem>\n                    <MenuItem value=\"PA\">Pará</MenuItem>\n                    <MenuItem value=\"PB\">Paraíba</MenuItem>\n                    <MenuItem value=\"PR\">Paraná</MenuItem>\n                    <MenuItem value=\"PE\">Pernambuco</MenuItem>\n                    <MenuItem value=\"PI\">Piauí</MenuItem>\n                    <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\n                    <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\n                    <MenuItem value=\"RO\">Rondônia</MenuItem>\n                    <MenuItem value=\"RR\">Roraíma</MenuItem>\n                    <MenuItem value=\"SC\">Santa Catarina</MenuItem>\n                    <MenuItem value=\"SP\">São Paulo</MenuItem>\n                    <MenuItem value=\"SE\">Sergipe</MenuItem>\n                    <MenuItem value=\"TO\">Tocantins</MenuItem>\n                </TextField>\n\n                {/* Telefone */}\n                <InputMask\n                    formatChars={formatChars}\n                    mask={telefoneMask}\n                    value={cliente.telefone}\n                    id=\"telefone\"\n                    onChange={event => handleInputChange(event, 'telefone')}\n                >\n                    {() => <TextField \n                                label=\"Telefone\" \n                                variant=\"filled\" \n                                fullWidth \n                                required\n                                error={error.telefone !== ''}\n                                helperText={error.telefone}\n                            />}\n                </InputMask>\n \n                {/* Email */}\n                <TextField\n                    id=\"email\" \n                    label=\"Email\" \n                    variant=\"filled\" \n                    value={cliente.email} \n                    onChange={handleInputChange} \n                    fullWidth \n                    required\n                    error={error.email !== ''}\n                    helperText={error.email}\n                />\n                \n                <Toolbar className={classes.toolbar}>\n                    <Button \n                        variant=\"contained\"\n                        onClick={handleGoBack}\n                    >\n                        Voltar\n                    </Button>\n                    <Button\n                        variant=\"contained\" \n                        color=\"secondary\" \n                        type=\"submit\"\n                        disabled={btnSendState.disable}\n                    >\n                        {btnSendState.label}\n                    </Button>\n                </Toolbar>\n            </form>\n        </>\n    )\n}","import './App.css';\n\nimport FooterBar from './ui/FooterBar'\nimport TopBar from './ui/TopBar'\nimport Box from '@material-ui/core/Box'\n\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport KarangosList from './routed/KarangosList2';\nimport KarangosForm from './routed/KarangosForm';\nimport ClientesList from './routed/ClientesList2';\nimport ClientesForm from './routed/ClientesForm';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: yellow[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100vh',\n    paddingBottom: '42px'\n  },\n  routed: {\n    padding: '25px',\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  }\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <BrowserRouter>\n        <TopBar />\n        <Box id=\"routed\" className={classes.routed}>\n          <Switch>\n            <Route path=\"/list\">\n              <KarangosList />\n            </Route>\n            <Route path=\"/new\">\n              <KarangosForm />\n            </Route>\n            {/*  :id é um parâmetro (nomes de parâmetros começam com dois pontos) */}\n            <Route path=\"/edit/:id\">\n              <KarangosForm />\n            </Route>\n            <Route path=\"/clientesList\">\n              <ClientesList />\n            </Route>\n            <Route path=\"/clientesNew\">\n              <ClientesForm />\n            </Route>\n            <Route path=\"/clientesEdit/:id\">\n              <ClientesForm />\n            </Route>\n          </Switch>\n        </Box>\n        <FooterBar />\n      </BrowserRouter>\n    </Box>\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </div>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}